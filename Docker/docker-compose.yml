version: '3.8'

services:
  # Spring Boot Application
  library-service:
    container_name: library-service
    build: .  # Build from the Dockerfile in the current directory
    ports:
      - "8000:8000"  # Exposing the app on port 8000
    environment:
      - SPRING_APPLICATION_NAME=library
      - SERVER_PORT=8000
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - DB_USERNAME=root  # Use 'root' user for MySQL
      - DB_PASSWORD=rootpassword  # Corresponding password for root
      - JWT_SECRET_KEY=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
      - JWT_EXPIRATION_TIME=3600000
      - CORS_ALLOWED_ORIGINS=*
      - CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE
      - CORS_ALLOWED_HEADERS=Content-Type,Authorization
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_TTL=3600
      # Optionally define Spring profiles
      - SPRING_PROFILES_ACTIVE=dev  # Set the active profile if needed (optional)
    depends_on:
      - mysql
      - redis
    networks:
      - library-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword  # Root password
      - MYSQL_DATABASE=library_db  # The database to create
      - MYSQL_USER=abdullah  # Regular user 'abdullah'
      - MYSQL_PASSWORD=abd123  # Regular user password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - library-network

  # Redis Cache
  redis:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      - library-network

# Volumes for persistent data
volumes:
  mysql-data:

# Networks for internal communication between containers
networks:
  library-network:
    driver: bridge
